version: '3.8'

services:
  # Base de donn√©es PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: coovia_postgres
    environment:
      POSTGRES_DB: coovia_db
      POSTGRES_USER: coovia_user
      POSTGRES_PASSWORD: coovia_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - coovia_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U coovia_user -d coovia_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Laravel
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: coovia_backend
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=coovia_db
      - DB_USERNAME=coovia_user
      - DB_PASSWORD=coovia_password
      - CACHE_DRIVER=file
      - SESSION_DRIVER=file
      - QUEUE_CONNECTION=sync
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/var/www
      - /var/www/vendor
      - /var/www/node_modules
    networks:
      - coovia_network
    restart: unless-stopped

  # Frontend Admin Dashboard
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: coovia_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
      - REACT_APP_ENV=production
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - coovia_network
    restart: unless-stopped

  # Boutique Client (Public Store)
  boutique-client:
    build: 
      context: ./boutique-client
      dockerfile: Dockerfile
    container_name: coovia_boutique_client
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
      - REACT_APP_ENV=production
    ports:
      - "3001:3001"
    depends_on:
      - backend
    networks:
      - coovia_network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: coovia_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
      - boutique-client
    networks:
      - coovia_network
    restart: unless-stopped

  # Redis pour le cache (optionnel)
  redis:
    image: redis:7-alpine
    container_name: coovia_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - coovia_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  coovia_network:
    driver: bridge
