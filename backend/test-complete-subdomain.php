<?php

// Charger le fichier .env
$envFile = __DIR__ . '/.env';
if (file_exists($envFile)) {
    $lines = file($envFile, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
    foreach ($lines as $line) {
        if (strpos($line, '=') !== false && strpos($line, '#') !== 0) {
            list($key, $value) = explode('=', $line, 2);
            $_ENV[trim($key)] = trim($value);
        }
    }
}

echo "üß™ Test complet de cr√©ation de sous-domaines\n";
echo "==========================================\n\n";

$vercelToken = $_ENV['VERCEL_TOKEN'] ?? null;
$vercelProjectId = $_ENV['VERCEL_PROJECT_ID'] ?? null;
$vercelDomain = $_ENV['VERCEL_DOMAIN'] ?? null;

if (!$vercelToken || !$vercelProjectId || !$vercelDomain) {
    echo "‚ùå Configuration incompl√®te\n";
    exit(1);
}

// Test 1: Cr√©ation d'un sous-domaine avec un slug simple
echo "1Ô∏è‚É£ Test de cr√©ation avec slug simple: 'nocodeci'\n";

$testSlug = 'nocodeci';
$subdomain = $testSlug . '.' . $vercelDomain;

$url = "https://api.vercel.com/v1/projects/{$vercelProjectId}/domains";
$headers = [
    'Authorization: Bearer ' . $vercelToken,
    'Content-Type: application/json'
];

$data = [
    'name' => $subdomain,
    'projectId' => $vercelProjectId
];

$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, $url);
curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
curl_setopt($ch, CURLOPT_POST, true);
curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($data));
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);

$response = curl_exec($ch);
$httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
curl_close($ch);

echo "  üì° Code HTTP: $httpCode\n";
echo "  üìÑ R√©ponse: $response\n";

if ($httpCode === 200 || $httpCode === 201) {
    echo "  ‚úÖ Sous-domaine cr√©√© avec succ√®s!\n";
    echo "  üåê URL: https://$subdomain\n";
    
    // V√©rifier que le sous-domaine existe
    echo "\n2Ô∏è‚É£ V√©rification de l'existence...\n";
    
    $checkUrl = "https://api.vercel.com/v1/projects/{$vercelProjectId}/domains/{$subdomain}";
    
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $checkUrl);
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
    
    $response = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);
    
    if ($httpCode === 200) {
        echo "  ‚úÖ Sous-domaine confirm√© dans Vercel\n";
        $data = json_decode($response, true);
        echo "  üìã Nom: " . ($data['name'] ?? 'Inconnu') . "\n";
        echo "  üìã Cr√©√© le: " . (isset($data['createdAt']) ? date('Y-m-d H:i:s', $data['createdAt'] / 1000) : 'Inconnu') . "\n";
    } else {
        echo "  ‚ö†Ô∏è Sous-domaine non trouv√© (HTTP $httpCode)\n";
    }
    
    // Supprimer le sous-domaine de test
    echo "\n3Ô∏è‚É£ Nettoyage - Suppression du sous-domaine...\n";
    
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $checkUrl);
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'DELETE');
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
    
    $response = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);
    
    if ($httpCode === 200 || $httpCode === 204) {
        echo "  ‚úÖ Sous-domaine supprim√© avec succ√®s\n";
    } else {
        echo "  ‚ö†Ô∏è Erreur lors de la suppression (HTTP $httpCode)\n";
    }
    
} else {
    echo "  ‚ùå Erreur lors de la cr√©ation\n";
    $errorData = json_decode($response, true);
    if (isset($errorData['error'])) {
        echo "  üìù Erreur: " . ($errorData['error']['message'] ?? 'Erreur inconnue') . "\n";
    }
}

echo "\n‚úÖ Test termin√©\n";
echo "\nüìù Maintenant vous pouvez cr√©er des boutiques via l'interface web\n";
echo "üîç Les sous-domaines seront cr√©√©s exactement comme vous les saisissez\n";
echo "üåê Exemple: 'nocodeci' ‚Üí nocodeci.wozif.store\n";
