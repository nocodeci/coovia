#!/bin/bash

# ---------------------------------
# Script de diagnostic Laravel Cloud
# V√©rifie et r√©sout les probl√®mes courants
# ---------------------------------

echo "üîç Diagnostic Laravel Cloud"
echo "============================"
echo ""

# V√©rifier que nous sommes dans un environnement Laravel Cloud
if [ ! -f "/opt/cloud/.env" ]; then
    echo "‚ö†Ô∏è  Ce script est con√ßu pour Laravel Cloud"
    echo "   Ex√©cution en environnement local d√©tect√©e"
fi

echo "üìã V√©rification de la structure..."
echo ""

# V√©rifier la structure Laravel
if [ -f "artisan" ]; then
    echo "‚úÖ Laravel Artisan trouv√©"
else
    echo "‚ùå Laravel Artisan manquant"
    echo "   V√©rifiez que le script de construction a fonctionn√©"
    exit 1
fi

if [ -d "public" ]; then
    echo "‚úÖ Dossier public trouv√©"
else
    echo "‚ùå Dossier public manquant"
    exit 1
fi

if [ -f "public/index.php" ]; then
    echo "‚úÖ public/index.php trouv√©"
else
    echo "‚ùå public/index.php manquant"
    exit 1
fi

echo ""
echo "üîß V√©rification des permissions..."
echo ""

# V√©rifier et corriger les permissions
echo "üìÅ Permissions des dossiers critiques..."
chmod -R 755 storage 2>/dev/null || echo "‚ö†Ô∏è  Impossible de modifier storage"
chmod -R 755 bootstrap/cache 2>/dev/null || echo "‚ö†Ô∏è  Impossible de modifier bootstrap/cache"
chmod 644 public/.htaccess 2>/dev/null || echo "‚ö†Ô∏è  Impossible de modifier public/.htaccess"

echo ""
echo "üîó V√©rification des liens symboliques..."
echo ""

# Cr√©er le lien de stockage
if [ ! -L "public/storage" ]; then
    echo "üîó Cr√©ation du lien de stockage..."
    php artisan storage:link 2>/dev/null || echo "‚ö†Ô∏è  Impossible de cr√©er le lien de stockage"
else
    echo "‚úÖ Lien de stockage existant"
fi

echo ""
echo "üìä V√©rification de la base de donn√©es..."
echo ""

# Tester la connexion √† la base de donn√©es
if php artisan migrate:status > /dev/null 2>&1; then
    echo "‚úÖ Connexion √† la base de donn√©es OK"
else
    echo "‚ùå Probl√®me de connexion √† la base de donn√©es"
    echo "   V√©rifiez les variables d'environnement DB_*"
fi

echo ""
echo "üîç V√©rification des variables d'environnement..."
echo ""

# V√©rifier les variables critiques
if [ -n "$APP_KEY" ]; then
    echo "‚úÖ APP_KEY configur√©e"
else
    echo "‚ùå APP_KEY manquante"
    echo "   Ex√©cutez: php artisan key:generate"
fi

if [ -n "$APP_ENV" ]; then
    echo "‚úÖ APP_ENV configur√©e: $APP_ENV"
else
    echo "‚ö†Ô∏è  APP_ENV non configur√©e"
fi

if [ -n "$DB_CONNECTION" ]; then
    echo "‚úÖ DB_CONNECTION configur√©e: $DB_CONNECTION"
else
    echo "‚ùå DB_CONNECTION manquante"
fi

echo ""
echo "üåê Test de l'application..."
echo ""

# Tester si l'application r√©pond
if command -v curl > /dev/null 2>&1; then
    echo "üß™ Test de l'application avec curl..."
    if curl -s -o /dev/null -w "%{http_code}" http://localhost/ | grep -q "200\|404"; then
        echo "‚úÖ L'application r√©pond"
    else
        echo "‚ùå L'application ne r√©pond pas"
        echo "   V√©rifiez les logs Apache/Nginx"
    fi
else
    echo "‚ö†Ô∏è  curl non disponible pour le test"
fi

echo ""
echo "üìù Logs utiles..."
echo ""

# Afficher les logs r√©cents
if [ -f "storage/logs/laravel.log" ]; then
    echo "üìã Derni√®res erreurs Laravel:"
    tail -n 5 storage/logs/laravel.log 2>/dev/null || echo "   Impossible de lire les logs"
else
    echo "‚ö†Ô∏è  Fichier de log Laravel non trouv√©"
fi

echo ""
echo "üîß Solutions recommand√©es..."
echo ""

echo "Si vous avez des probl√®mes:"
echo "1. V√©rifiez les variables d'environnement dans Laravel Cloud"
echo "2. Assurez-vous que APP_KEY est configur√©e"
echo "3. V√©rifiez la connexion √† la base de donn√©es"
echo "4. Consultez les logs dans l'interface Laravel Cloud"
echo "5. Red√©ployez si n√©cessaire"

echo ""
echo "üéØ Diagnostic termin√©!"
